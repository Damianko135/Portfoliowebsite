version: '3.8'

services:
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel --no-autoupdate run --token ${TUNNEL_TOKEN}
    networks:
      - tunnel
    restart: unless-stopped

  portfolio:
    container_name: Portfolio
    image: php:apache
    ports:
      - "8080:80"  
    volumes:
      - ./.Portfolio:/var/www/html
    command:
      - "/bin/bash"
      - "-c"
      - |
        a2enmod rewrite \
        && docker-php-ext-install pdo_mysql \
        && apache2-foreground
    restart: unless-stopped
    depends_on:
      - mysql
    networks:
      - tunnel

  opleiding_blok_b:
    container_name: Blok_B
    image: php:apache
    ports:
      - "8081:80"  
    volumes:
      - ./.Block_B:/var/www/html/
    command:
      - "/bin/bash"
      - "-c"
      - |
        a2enmod rewrite \
        && docker-php-ext-install pdo_mysql \
        && apache2-foreground
    restart: unless-stopped
    networks:
      - tunnel

  opleiding_blok_c:
    container_name: Blok_C
    image: php:apache
    ports:
      - "8082:80"  
    volumes:
      - ./.Block_C:/var/www/html/
    command:
      - "/bin/bash"
      - "-c"
      - |
        a2enmod rewrite \
        && docker-php-ext-install pdo_mysql \
        && apache2-foreground
    restart: unless-stopped
    networks:
      - tunnel

  mysql:
    container_name: Database
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./.mysql_data:/var/lib/mysql
      - ./sql-files:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - tunnel

  phpmyadmin:
    container_name: PHPMyAdmin
    image: phpmyadmin
    ports:
      - 8070:80  
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - tunnel

  minecraft:
    container_name: Minecraft
    image: itzg/minecraft-server
    tty: true
    stdin_open: true
    ports:
      - "25565:25565"  
    environment:
      EULA: "TRUE"
    restart: unless-stopped
    volumes:
      - ./.Minecraft:/data
    networks:
      - tunnel

  uptime-kuma:
    container_name: kuma
    image: louislam/uptime-kuma:latest
    ports:
      - "3001:3001"   
    volumes:
      - ./.uptime-kuma:/app/Database
    restart: always
    depends_on:
      - portfolio
    networks:
      - tunnel

  dockge:
    container_name: dockge
    image: louislam/dockge:1
    restart: unless-stopped
    ports:
      - 5001:5001   
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data:/app/data
      - /home/orangepi:/home/orangepi
    environment:
      - DOCKGE_STACKS_DIR=/home/orangepi
    networks:
      - tunnel

networks:
  tunnel:
    external: true
